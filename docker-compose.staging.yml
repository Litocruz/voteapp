services:
  vote:
    image: ${secrets.DOCKERHUB_USERNAME}/vote
    build:
      context: ./vote
    environment:
      - NODE_ENV=${NODE_ENV}
      - REDIS_HOST=${REDIS_HOST}
      - DATABASE_HOST=${DATABASE_HOST}
      - DATABASE_USER=${DATABASE_USER}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - DATABASE_NAME=${DATABASE_NAME}
    ports:
      - 8080:80
    depends_on:
      redis:
        condition: service_healthy

  redis:
    image: redis:alpine
    ports:
      - '6379:6379'  
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 5s

  worker:
    image: ${secrets.DOCKERHUB_USERNAME}/worker
    build:
      context: ./worker
    environment:
      - NODE_ENV=${NODE_ENV}
      - REDIS_HOST=${REDIS_HOST}
      - DATABASE_HOST=${DATABASE_HOST}
      - DATABASE_USER=${DATABASE_USER}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - DATABASE_NAME=${DATABASE_NAME}
    ports:
      - 3000:3000
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  result:
    image: ${secrets.DOCKERHUB_USERNAME}/result
    build:
      context: ./result
    environment:
      - APP_PORT=${APP_PORT}
      - NODE_ENV=${NODE_ENV}
      - REDIS_HOST=${REDIS_HOST}
      - DATABASE_HOST=${DATABASE_HOST}
      - DATABASE_USER=${DATABASE_USER}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - DATABASE_NAME=${DATABASE_NAME}
    ports:
      - 3001:3000
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
  
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
      - POSTGRES_DB=${DATABASE_NAME}
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  pgdata: